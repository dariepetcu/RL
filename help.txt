class Environment(builtins.object)
 |  Environment(specification={}, configuration={}, info={}, steps=[], logs=[], agents={}, interpreter=None, renderer=None, html_renderer=None, debug=False, state=None)
 |
 |  Methods defined here:
 |
 |  __init__(self, specification={}, configuration={}, info={}, steps=[], logs=[], agents={}, interpreter=None, renderer=None, html_renderer=None, debug=False, state=None)
 |      Initialize self.  See help(type(self)) for accurate signature.
 |
 |  clone(self)
 |      Returns:
 |          Environment: A copy of the current environment.
 |
 |  debug_print(self, message)
 |
 |  play(self, agents=[], **kwargs)
 |      Renders a visual representation of the environment and allows interactive action selection.
 |
 |      Args:
 |          **kwargs (dict): Args directly passed into render().  Mode is fixed to ipython.
 |
 |      Returns:
 |          None: prints directly to an IPython notebook
 |
 |  render(self, **kwargs)
 |      Renders a visual representation of the current state of the environment.
 |
 |      Args:
 |          mode (str): html, ipython, ansi, human (default)
 |          **kwargs (dict): Other args are directly passed into the html player.
 |
 |      Returns:
 |          str: html if mode=html or ansi if mode=ansi.
 |          None: prints ansi if mode=human or prints html if mode=ipython
 |
 |  reset(self, num_agents=None)
 |      Resets the environment state to the initial step.
 |
 |      Args:
 |          num_agents (int): Resets the state assuming a fixed number of agents.
 |
 |      Returns:
 |          list of dict: The agents states after the reset.
 |
 |  run(self, agents)
 |      Steps until the environment is "done" or the runTimeout was reached.
 |
 |      Args:
 |          agents (list of any): List of agents to obtain actions from.
 |
 |      Returns:
 |          tuple of:
 |              list of list of dict: The agent states of all steps executed.
 |              list of list of dict: The agent logs of all steps executed.
 |
 |  step(self, actions, logs=[])
 |      Execute the environment interpreter using the current state and a list of actions.
 |
 |      Args:
 |          actions (list): Actions to pair up with the current agent states.
 |          logs (list): Logs to pair up with each agent for the current step.
 |
 |      Returns:
 |          list of dict: The agents states after the step.
 |
 |  toJSON(self)
 |      Returns:
 |          dict: Specification and current state of the Environment instance.
 |
 |  train(self, agents=[])
 |      Setup a lightweight training environment for a single agent.
 |      Note: This is designed to be a lightweight starting point which can
 |            be integrated with other frameworks (i.e. gym, stable-baselines).
 |            The reward returned by the "step" function here is a diff between the
 |            current and the previous step.
 |
 |      Example:
 |          env = make("tictactoe")
 |          # Training agent in first position (player 1) against the default random agent.
 |          trainer = env.train([None, "random"])
 |
 |          obs = trainer.reset()
 |          done = False
 |          while not done:
 |              action = 0 # Action for the agent being trained.
 |              obs, reward, done, info = trainer.step(action)
 |          env.render()
 |
 |      Args:
 |          agents (list): List of agents to obtain actions from while training.
 |                         The agent to train (in position), should be set to "None".
 |
 |      Returns:
 |          `dict`.reset: Reset def that reset the environment, then advances until the agents turn.
 |          `dict`.step: Steps using the agent action, then advance until agents turn again.
 |
 |  ----------------------------------------------------------------------
 |  Readonly properties defined here:
 |
 |  done
 |      bool: If any agents have an ACTIVE status.
 |
 |  name
 |      str: The name from the specification.
 |
 |  version
 |      str: The version from the specification.
 |
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |
 |  __dict__
 |      dictionary for instance variables (if defined)
 |
 |  __weakref__
 |      list of weak references to the object (if defined)


Process finished with exit code 0
